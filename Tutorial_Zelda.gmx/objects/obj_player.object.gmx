<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_kiara_idle_alt</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vx = 0;
vy = 0;

player_speed = 2;

timer = 0;
state = "IDLE";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>anim_speed = 0.3;
switch (state) {

    case "IDLE": {
      //  sprite_index = spr_kiara_idle_alt;
        image_speed = 0;
        vx = 0;
        vy = 0;
        if (obj_input.up) state = "UP";
        if (obj_input.down) state = "DOWN";
        if (obj_input.left) state = "LEFT";
        if (obj_input.right) state = "RIGHT";
        if (!obj_input.up &amp;&amp; !obj_input.down &amp;&amp; !obj_input.left &amp;&amp; !obj_input.right) state = "IDLE";
        break;
    }
    
    case "UP":{
        image_speed = anim_speed;
//        sprite_index = &lt;insert sprite here&gt;;
        image_xscale = 1;
        vx = 0;
        vy = player_speed * -1;
        if (obj_input.up) state = "UP";
        if (obj_input.down) state = "DOWN";
        if (obj_input.left) state = "LEFT";
        if (obj_input.right) state = "RIGHT";
        if (!obj_input.up &amp;&amp; !obj_input.down &amp;&amp; !obj_input.left &amp;&amp; !obj_input.right) state = "IDLE";
        break;
    }
    case "DOWN":{
        image_speed = anim_speed;
        //        sprite_index = &lt;insert sprite here&gt;;     
        image_xscale = 1;
        vx = 0;
        vy = player_speed;
        if (obj_input.up) state = "UP";
        if (obj_input.down) state = "DOWN";
        if (obj_input.left) state = "LEFT";
        if (obj_input.right) state = "RIGHT";
        if (!obj_input.up &amp;&amp; !obj_input.down &amp;&amp; !obj_input.left &amp;&amp; !obj_input.right) state = "IDLE";
        break;
    }
    case "LEFT":{
        image_speed = anim_speed;
        sprite_index = spr_player_side;
        image_xscale = -1;
        vx = player_speed * -1;
        vy = 0;
        if (obj_input.up) state = "UP";
        if (obj_input.down) state = "DOWN";
        if (obj_input.left) state = "LEFT";
        if (obj_input.right) state = "RIGHT";
        if (!obj_input.up &amp;&amp; !obj_input.down &amp;&amp; !obj_input.left &amp;&amp; !obj_input.right) state = "IDLE";
        break;
    }
    case "RIGHT":{
        image_speed = anim_speed;
        sprite_index = spr_player_side;
        image_xscale = 1;
        vx = player_speed;
        vy = 0;
        if (obj_input.up) state = "UP";
        if (obj_input.down) state = "DOWN";
        if (obj_input.left) state = "LEFT";
        if (obj_input.right) state = "RIGHT";
        if (!obj_input.up &amp;&amp; !obj_input.down &amp;&amp; !obj_input.left &amp;&amp; !obj_input.right) state = "IDLE";
        break;
    }
   // case "ATTACK":




}


if ( abs( vy ) == 0)
{
    vx = (obj_input.right - obj_input.left) * player_speed;
}

if (abs ( vx ) == 0)
{
    vy = (obj_input.down - obj_input.up) * player_speed;
}
x += vx;
y += vy;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
